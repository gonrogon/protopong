/////////////////////////////////////////////////////////////
/// Proto Pong
///
/// Copyright (c) 2015 - 2016 Gonzalo González Romero
///
/// Permission is hereby granted, free of charge, to any person obtaining a copy
/// of this software and associated documentation files (the "Software"), to deal
/// in the Software without restriction, including without limitation the rights
/// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
/// copies of the Software, and to permit persons to whom the Software is
/// furnished to do so, subject to the following conditions:
///
/// The above copyright notice and this permission notice shall be included in
/// all copies or substantial portions of the Software.
///
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
/// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
/// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
/// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
/// THE SOFTWARE.
///
/// @file   src/data/Char.cpp
/// @date   2015-11-02
/// @author Gonzalo González Romero
////////////////////////////////////////////////////////////

#include "data/Char.hpp"

////////////////////////////////////////////////////////////

namespace pong {
namespace data {

////////////////////////////////////////////////////////////

const unsigned char Char::Glyphs[43][42] =
{
    // A
    {6, 7, 0, 0, 2, 5, 2, 2, 3, 1, 5, 0, 2, 5, 1, 5, 2, 1, 2, 6, 3, 1, 4, 5, 2, 1},
    // B
    {6, 7, 0, 0, 2, 7, 2, 0, 4, 1, 2, 3, 4, 1, 2, 6, 4, 1, 5, 4, 2, 2, 5, 1, 2, 2},
    // C
    {7, 7, 0, 2, 2, 3, 1, 1, 2, 1, 2, 0, 4, 1, 5, 1, 2, 1, 1, 5, 2, 1, 2, 6, 4, 1, 5, 5, 2, 1},
    // D
    {6, 7, 0, 0, 2, 7, 2, 0, 3, 1, 4, 1, 2, 1, 5, 2, 2, 3, 4, 5, 2, 1, 2, 6, 3, 1},
    // E
    {4, 7, 0, 0, 2, 7, 2, 0, 5, 1, 2, 3, 4, 1, 2, 6, 5, 1},
    // F
    {3, 7, 0, 0, 2, 7, 2, 3, 4, 1, 2, 6, 5, 1},
    // G
    {7, 7, 0, 2, 2, 3, 1, 1, 2, 1, 2, 0, 5, 1, 5, 1, 2, 2, 4, 3, 3, 1, 1, 5, 2, 1, 2, 6, 5, 1},
    // H
    {3, 7, 0, 0, 2, 7, 2, 3, 3, 1, 5, 0, 2, 7},
    // I
    {3, 6, 0, 0, 6, 1, 2, 1, 2, 5, 0, 6, 6, 1},
    // J
    {3, 7, 0, 1, 2, 1, 1, 0, 5, 1, 5, 1, 2, 6},
    // K
    {8, 7, 0, 0, 2, 7, 2, 2, 2, 2, 4, 2, 1, 1, 3, 1, 3, 1, 4, 0, 3, 1, 3, 4, 2, 1, 4, 5, 2, 1, 5, 6, 2, 1},
    // L
    {2, 7, 0, 0, 2, 7, 2, 0, 5, 1},
    // M
    {5, 7, 0, 0, 2, 7, 2, 3, 1, 3, 3, 2, 1, 3, 4, 3, 1, 3, 5, 0, 2, 7},
    // N
    {5, 7, 0, 0, 2, 7, 2, 3, 1, 3, 3, 2, 1, 3, 4, 1, 1, 3, 5, 0, 2, 7},
    // O
    {4, 7, 0, 1, 2, 5, 1, 0, 5, 1, 5, 1, 2, 5, 1, 6, 5, 1},
    // P
    {4, 7, 0, 0, 2, 7, 2, 2, 4, 1, 2, 6, 4, 1, 5, 3, 2, 3},
    // Q
    {7, 7, 0, 1, 2, 5, 1, 0, 4, 1, 3, 2, 2, 1, 4, 1, 2, 1, 6, 0, 1, 1, 5, 2, 2, 4, 1, 6, 5, 1},
    // R
    {7, 7, 0, 0, 2, 7, 2, 6, 4, 1, 5, 4, 2, 2, 4, 3, 3, 1, 2, 2, 3, 1, 3, 1, 3, 1, 4, 0, 3, 1},
    // S
    {7, 7, 0, 1, 2, 1, 1, 0, 5, 1, 5, 1, 2, 2, 1, 3, 5, 1, 0, 4, 2, 2, 1, 6, 5, 1, 5, 5, 2, 1},
    // T
    {2, 6, 0, 6, 6, 1, 2, 0, 2, 6},
    // U
    {3, 7, 0, 1, 2, 6, 1, 0, 5, 1, 5, 1, 2, 6},
    // V
    {7, 7, 0, 4, 2, 3, 0, 3, 3, 1, 1, 2, 5, 1, 2, 1, 3, 1, 3, 0, 1, 1, 4, 3, 3, 1, 5, 4, 2, 3},
    // W
    {5, 7, 0, 0, 2, 7, 2, 1, 1, 3, 3, 2, 1, 3, 4, 1, 1, 3, 5, 0, 2, 7},
    // X
    {9, 7, 0, 0, 2, 2, 5, 0, 2, 2, 5, 5, 2, 2, 0, 5, 2, 2, 1, 4, 5, 1, 1, 2, 5, 1, 2, 1, 1, 5, 4, 1, 1, 5, 2, 2, 3, 3},
    // Y
    {4, 6, 0, 4, 2, 3, 1, 3, 4, 1, 2, 0, 2, 3, 4, 4, 2, 3},
    // Z
    {7, 7, 0, 6, 7, 1, 4, 5, 3, 1, 3, 4, 3, 1, 2, 3, 3, 1, 1, 2, 3, 1, 0, 1, 3, 1, 0, 0, 7, 1},
    // 0
    {8, 7, 0, 2, 2, 3, 1, 1, 2, 1, 2, 0, 3, 1, 5, 1, 1, 1, 5, 2, 2, 3, 4, 5, 2, 1, 2, 6, 3, 1, 1, 5, 1, 1},
    // 1
    {3, 6, 0, 0, 6, 1, 2, 1, 2, 6, 1, 5, 1, 1},
    // 2
    {8, 7, 0, 5, 2, 1, 1, 6, 5, 1, 5, 5, 2, 1, 4, 4, 3, 1, 2, 3, 4, 1, 1, 2, 4, 1, 0, 1, 3, 1, 0, 0, 7, 1},
    // 3
    {7, 7, 1, 6, 6, 1, 4, 5, 2, 1, 3, 4, 2, 1, 2, 3, 4, 1, 5, 1, 2, 2, 1, 0, 5, 1, 0, 1, 2, 1},
    // 4
    {6, 7, 4, 0, 2, 7, 3, 6, 1, 1, 2, 5, 2, 1, 1, 4, 2, 1, 0, 3, 2, 1, 0, 2, 7, 1},
    // 5
    {6, 7, 0, 6, 6, 1, 0, 5, 2, 1, 0, 4, 6, 1, 5, 1, 2, 3, 1, 0, 5, 1, 0, 1, 2, 1},
    // 6
    {6, 7, 2, 6, 4, 1, 1, 5, 2, 1, 0, 1, 2, 4, 1, 0, 5, 1, 5, 1, 2, 2, 2, 3, 4, 1},
    // 7
    {6, 7, 0, 5, 2, 1, 0, 6, 7, 1, 5, 5, 2, 1, 4, 4, 2, 1, 3, 3, 2, 1, 2, 0, 2, 3},
    // 8
    {8, 7, 5, 4, 1, 2, 1, 6, 4, 1, 0, 4, 2, 2, 1, 3, 2, 2, 3, 2, 2, 2, 5, 1, 2, 2, 1, 0, 5, 1, 0, 1, 1, 2},
    // 9
    {6, 7, 1, 3, 4, 1, 0, 4, 2, 2, 1, 6, 5, 1, 5, 2, 2, 4, 4, 1, 2, 1, 1, 0, 4, 1},
    // :
    {2, 2, 0, 0, 2, 2, 0, 4, 2, 2},
    // !
    {3, 7, 2, 0, 2, 1, 2, 2, 2, 2, 2, 4, 3, 3},
    // ?
    {6, 7, 0, 4, 2, 2, 1, 5, 5, 2, 5, 4, 2, 2, 4, 3, 2, 1, 2, 2, 3, 1 ,2, 0, 3, 1},
    // (
    {5, 4, 2, 6, 2, 1, 1, 5, 2, 1, 0, 2, 2, 3, 1, 1, 2, 1, 2, 0, 2, 1},
    // )
    {5, 4, 0, 6, 2, 1, 1, 5, 2, 1, 2, 2, 2, 3, 1, 1, 2, 1, 0, 0, 2, 1},
    // Á
    {8, 7, 0, 0, 2, 5, 2, 2, 3, 1, 5, 0, 2, 5, 1, 5, 2, 1, 2, 6, 3, 1, 4, 5, 2, 1, 2, 8, 2, 1, 3, 9, 2, 1},
    // ,
    {2, 3, 0, 0, 2, 1, 1, 1, 2, 2}
};

////////////////////////////////////////////////////////////

const unsigned char* Char::glyph(const std::uint32_t c)
{
    if (c >= 'A'  && c <= 'Z')  { return Glyphs[c - 'A']; }
    if (c >= 'a'  && c <= 'z')  { return Glyphs[c - 'a']; }
    if (c >= '0'  && c <= ':')  { return Glyphs[c - '0' + 26]; }
    if (c >= '('  && c <= ')')  { return Glyphs[c - '(' + 39]; }
    if (c == '!')               { return Glyphs[37]; }
    if (c == '?')               { return Glyphs[38]; }
    if (c == ',')               { return Glyphs[42]; }
    if (c == 0xc1 || c == 0xe1) { return Glyphs[41]; }

    return nullptr;
}

////////////////////////////////////////////////////////////

} // namespace data
} // namespace pong
